{"version":3,"sources":["components/gif/loader.gif","components/Search.js","App.js","index.js"],"names":["Search","props","handleInputChange","event","query","target","value","setState","loading","message","getSearchResults","results","cancel","axios","CancelToken","source","get","cancelToken","token","then","res","resultNotFoundMsg","data","length","catch","err","isCancel","renderSearchResults","state","Object","keys","className","map","result","common_name","scientific_name","_id","mesage","url","console","log","this","htmlFor","type","id","placeholder","onChange","src","Loader","alt","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qSAAe,MAA0B,mCCiJ1BA,E,kDAlIX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IA0BVC,kBAAoB,SAAAC,GAChB,IAAMC,EAAQD,EAAME,OAAOC,MAEtBF,EAOD,EAAKG,SAAS,CACVH,QACAI,SAAS,EACTC,QAAS,KACV,WAEC,EAAKC,iBAAiBN,MAZ1B,EAAKG,SAAS,CACVH,QACAO,QAAS,GACTF,QAAS,MAlCF,EAiDnBC,iBAAmB,SAACN,GAGZ,EAAKQ,QACL,EAAKA,OAAOA,SAEhB,EAAKA,OAASC,IAAMC,YAAYC,SAEhCF,IAAMG,IANY,mBAMG,CACjBC,YAAa,EAAKL,OAAOM,QAExBC,MAAK,SAAAC,GACF,IAAMC,EAAqBD,EAAIE,KAAKC,OACO,GAArC,mCACN,EAAKhB,SAAS,CACVI,QAASS,EAAIE,KACbb,QAASY,EACTb,SAAS,OAGhBgB,OAAM,SAAAC,IACCZ,IAAMa,SAASD,IAAQA,IACvB,EAAKlB,SAAS,CACVC,SAAS,EACTC,QAAS,2BAzEV,EA+EnBkB,oBAAsB,WAAO,IACjBhB,EAAY,EAAKiB,MAAjBjB,QAER,GAAIkB,OAAOC,KAAKnB,GAASY,QAAUZ,EAAQY,OACvC,OACI,qBAAKQ,UAAU,oBAAf,SACKpB,GAAWA,EAAQqB,KAAI,SAAAC,GACpB,OACI,qBAAsBF,UAAU,cAAhC,SACI,qBAAIA,UAAU,cAAd,UAA6BE,EAAOC,YAApC,MAAoDD,EAAOE,oBADrDF,EAAOG,WArFrC,EAAKR,MAAQ,CACTxB,MAAO,GACPO,QAAS,GACTH,SAAS,EACT6B,OAAQ,IAEZ,EAAKzB,OAAS,GARC,E,gEAYE,IAAD,OACV0B,EAAM,WACZC,QAAQC,IAAIF,GACZzB,IAAMG,IAAIsB,GAAKnB,MAAK,SAAAC,GAChB,EAAKb,SAAS,CACVI,QAASS,EAAIE,UAElBE,OAAM,SAAAC,GACLc,QAAQC,IAAIf,Q,+BA6EV,IAAD,EAE+BgB,KAAKb,MAAjCxB,EAFH,EAEGA,MAAOI,EAFV,EAEUA,QAASC,EAFnB,EAEmBA,QAExB,OACI,sBAAKsB,UAAU,YAAf,UAGI,oBAAIA,UAAU,UAAd,yBAGA,wBAAOA,UAAU,qBAAqBW,QAAQ,eAA9C,UACI,uBAAOC,KAAK,OAAOrC,MAAOF,EACtBwC,GAAG,eACHC,YAAY,kDACZC,SAAUL,KAAKvC,oBACnB,mBAAG6B,UAAU,iCAIhBtB,GAAW,oBAAGsB,UAAU,UAAb,cAAyBtB,EAAzB,OAGZ,qBAAKsC,IAAKC,EAAQjB,UAAS,yBAAoBvB,EAAU,OAAS,QAAUyC,IAAI,YAG/ER,KAAKd,6B,GA5HDuB,a,MCHNC,MARf,WACE,OACE,8BACE,cAAC,EAAD,OCANC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.ceac3956.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/loader.488387b4.gif\";","import React, { Component } from 'react'\r\nimport './Search.css';\r\nimport axios from 'axios';\r\nimport Loader from './gif/loader.gif';\r\n\r\n// API Server variable\r\n// let serverAPI = \"\";\r\n// if (process.env.NODE_ENV === \"production\") {\r\n//     serverAPI = process.env.PORT;\r\n// } else {\r\n//     serverAPI = \"http://localhost:8000\";\r\n// }\r\n\r\n// using class component\r\nclass Search extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            query: \"\",\r\n            results: {},\r\n            loading: false,\r\n            mesage: ''\r\n        }\r\n        this.cancel = ''\r\n    }\r\n\r\n    // populate page with all data rows...\r\n    componentDidMount() {\r\n        const url = '/findAll'\r\n        console.log(url)\r\n        axios.get(url).then(res => {\r\n            this.setState({\r\n                results: res.data\r\n            })\r\n        }).catch(err => {\r\n            console.log(err)\r\n        })\r\n\r\n    }\r\n\r\n\r\n    // dynamic query\r\n    handleInputChange = event => {\r\n        const query = event.target.value\r\n\r\n        if (!query) {\r\n            this.setState({\r\n                query,\r\n                results: {},\r\n                message: ''\r\n            })\r\n        } else {\r\n            this.setState({\r\n                query,\r\n                loading: true,\r\n                message: ''\r\n            }, () => {\r\n                // call search in callback function\r\n                this.getSearchResults(query)\r\n            });\r\n        }\r\n    }\r\n\r\n    // get search results\r\n    getSearchResults = (query) => {\r\n\r\n        const searchUrl = '/search=${query}'\r\n        if (this.cancel) {\r\n            this.cancel.cancel()\r\n        }\r\n        this.cancel = axios.CancelToken.source()\r\n\r\n        axios.get(searchUrl, {\r\n            cancelToken: this.cancel.token\r\n        })\r\n            .then(res => {\r\n                const resultNotFoundMsg = !res.data.length\r\n                    ? \"There are no more search results\" : \"\";\r\n                this.setState({\r\n                    results: res.data,\r\n                    message: resultNotFoundMsg,\r\n                    loading: false\r\n                })\r\n            })\r\n            .catch(err => {\r\n                if (axios.isCancel(err) || err) {\r\n                    this.setState({\r\n                        loading: false,\r\n                        message: \"Failed to Get Data\"\r\n                    })\r\n                }\r\n            })\r\n    }\r\n\r\n    renderSearchResults = () => {\r\n        const { results } = this.state;\r\n\r\n        if (Object.keys(results).length && results.length) {\r\n            return (\r\n                <div className=\"results-container\">\r\n                    {results && results.map(result => {\r\n                        return (\r\n                            <div key={result._id} className=\"result-item\">\r\n                                <h6 className=\"animal-name\">{result.common_name} , {result.scientific_name}</h6>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const { query, loading, message } = this.state\r\n\r\n        return (\r\n            <div className=\"container\">\r\n\r\n                {/* TItle */}\r\n                <h2 className=\"heading\">Live Search</h2>\r\n\r\n                {/* Search Input */}\r\n                <label className=\"search-label w-100\" htmlFor=\"search-input\">\r\n                    <input type=\"text\" value={query}\r\n                        id=\"search-input\"\r\n                        placeholder=\"Search animals by common or scientific names...\"\r\n                        onChange={this.handleInputChange} />\r\n                    <i className=\"fas fa-search search-icon\"></i>\r\n                </label>\r\n\r\n                {/* Error Message */}\r\n                {message && <p className=\"message\"> {message} </p>}\r\n\r\n                {/* loading... */}\r\n                <img src={Loader} className={`search-loading ${loading ? 'show' : 'hide'}`} alt=\"loading\" />\r\n\r\n                {/* Results */}\r\n                {this.renderSearchResults()}\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Search","import Search from './components/Search'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div >\n      <Search />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}