{"version":3,"sources":["components/gif/loader.gif","components/Search.js","App.js","index.js"],"names":["Search","props","handleInputChange","event","query","target","value","console","log","setState","loading","message","getSearchResults","searchUrl","process","PORT","cancel","axios","CancelToken","source","get","cancelToken","token","then","res","resultNotFoundMsg","data","length","results","catch","err","isCancel","renderSearchResults","state","Object","keys","className","map","result","common_name","scientific_name","_id","mesage","url","this","htmlFor","type","id","placeholder","onChange","src","Loader","alt","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qSAAe,MAA0B,mCC0I1BA,E,kDAnIX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IA2BVC,kBAAoB,SAAAC,GAChB,IAAMC,EAAQD,EAAME,OAAOC,MAC3BC,QAAQC,IAAIJ,GACPA,EAOD,EAAKK,SAAS,CACVL,QACAM,SAAS,EACTC,QAAS,KACV,WAEC,EAAKC,iBAAiBR,MAZ1B,EAAKK,SAAS,CACVL,QAEAO,QAAS,MAnCF,EAkDnBC,iBAAmB,SAACR,GAEhB,IAAMS,EAAS,UAAMC,mIAAYC,KAAlB,mBAAiCX,GAC5C,EAAKY,QACL,EAAKA,OAAOA,SAEhB,EAAKA,OAASC,IAAMC,YAAYC,SAEhCF,IAAMG,IAAIP,EAAW,CACjBQ,YAAa,EAAKL,OAAOM,QAExBC,MAAK,SAAAC,GACF,IAAMC,EAAqBD,EAAIE,KAAKC,OACO,GAArC,mCACN,EAAKlB,SAAS,CACVmB,QAASJ,EAAIE,KACbf,QAASc,EACTf,SAAS,OAGhBmB,OAAM,SAAAC,IACCb,IAAMc,SAASD,IAAQA,IACvB,EAAKrB,SAAS,CACVC,SAAS,EACTC,QAAS,2BA1EV,EAgFnBqB,oBAAsB,WAAO,IACjBJ,EAAY,EAAKK,MAAjBL,QAER,GAAIM,OAAOC,KAAKP,GAASD,QAAUC,EAAQD,OACvC,OACI,qBAAKS,UAAU,oBAAf,SACKR,EAAQS,KAAI,SAAAC,GACT,OACI,qBAAsBF,UAAU,cAAhC,SACI,qBAAIA,UAAU,cAAd,UAA6BE,EAAOC,YAApC,MAAoDD,EAAOE,oBADrDF,EAAOG,WAtFrC,EAAKR,MAAQ,CACT7B,MAAO,GACPwB,QAAS,GACTlB,SAAS,EACTgC,OAAQ,IAEZ,EAAK1B,OAAS,GARC,E,gEAYE,IAAD,OACV2B,EAAG,UAAM7B,mIAAYC,KAAlB,YACTR,QAAQC,IAAImC,GACZ1B,IAAMG,IAAIuB,GAAKpB,MAAK,SAAAC,GAChBjB,QAAQC,IAAIgB,EAAIE,MAChB,EAAKjB,SAAS,CACVmB,QAASJ,EAAIE,UAElBG,OAAM,SAAAC,GACLvB,QAAQC,IAAIsB,Q,+BA6EV,IAAD,EAE+Bc,KAAKX,MAAjC7B,EAFH,EAEGA,MAAOM,EAFV,EAEUA,QAASC,EAFnB,EAEmBA,QAExB,OACI,sBAAKyB,UAAU,YAAf,UAGI,oBAAIA,UAAU,UAAd,yBAGA,wBAAOA,UAAU,qBAAqBS,QAAQ,eAA9C,UACI,uBAAOC,KAAK,OAAOxC,MAAOF,EACtB2C,GAAG,eACHC,YAAY,kDACZC,SAAUL,KAAK1C,oBACnB,mBAAGkC,UAAU,iCAIhBzB,GAAW,oBAAGyB,UAAU,UAAb,cAAyBzB,EAAzB,OAGZ,qBAAKuC,IAAKC,EAAQf,UAAS,yBAAoB1B,EAAU,OAAS,QAAU0C,IAAI,YAG/ER,KAAKZ,6B,GA7HDqB,a,MCKNC,MARf,WACE,OACE,8BACE,cAAC,EAAD,OCANC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.41e182a8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/loader.488387b4.gif\";","import React, { Component } from 'react'\r\nimport './Search.css';\r\nimport axios from 'axios';\r\nimport Loader from './gif/loader.gif';\r\n\r\n// using class component\r\nclass Search extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            query: \"\",\r\n            results: {},\r\n            loading: false,\r\n            mesage: ''\r\n        }\r\n        this.cancel = ''\r\n    }\r\n\r\n    // populate page with all data rows...\r\n    componentDidMount() {\r\n        const url = `${process.env.PORT}/findAll`\r\n        console.log(url)\r\n        axios.get(url).then(res => {\r\n            console.log(res.data)\r\n            this.setState({\r\n                results: res.data\r\n            })\r\n        }).catch(err => {\r\n            console.log(err)\r\n        })\r\n\r\n    }\r\n\r\n\r\n    // dynamic query\r\n    handleInputChange = event => {\r\n        const query = event.target.value\r\n        console.log(query)\r\n        if (!query) {\r\n            this.setState({\r\n                query,\r\n                // results: {},\r\n                message: ''\r\n            })\r\n        } else {\r\n            this.setState({\r\n                query,\r\n                loading: true,\r\n                message: ''\r\n            }, () => {\r\n                // call search in callback function\r\n                this.getSearchResults(query)\r\n            });\r\n        }\r\n    }\r\n\r\n    // get search results\r\n    getSearchResults = (query) => {\r\n\r\n        const searchUrl = `${process.env.PORT}/search=${query}`\r\n        if (this.cancel) {\r\n            this.cancel.cancel()\r\n        }\r\n        this.cancel = axios.CancelToken.source()\r\n\r\n        axios.get(searchUrl, {\r\n            cancelToken: this.cancel.token\r\n        })\r\n            .then(res => {\r\n                const resultNotFoundMsg = !res.data.length\r\n                    ? \"There are no more search results\" : \"\";\r\n                this.setState({\r\n                    results: res.data,\r\n                    message: resultNotFoundMsg,\r\n                    loading: false\r\n                })\r\n            })\r\n            .catch(err => {\r\n                if (axios.isCancel(err) || err) {\r\n                    this.setState({\r\n                        loading: false,\r\n                        message: \"Failed to Get Data\"\r\n                    })\r\n                }\r\n            })\r\n    }\r\n\r\n    renderSearchResults = () => {\r\n        const { results } = this.state;\r\n\r\n        if (Object.keys(results).length && results.length) {\r\n            return (\r\n                <div className=\"results-container\">\r\n                    {results.map(result => {\r\n                        return (\r\n                            <div key={result._id} className=\"result-item\">\r\n                                <h6 className=\"animal-name\">{result.common_name} , {result.scientific_name}</h6>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const { query, loading, message } = this.state\r\n\r\n        return (\r\n            <div className=\"container\">\r\n\r\n                {/* TItle */}\r\n                <h2 className=\"heading\">Live Search</h2>\r\n\r\n                {/* Search Input */}\r\n                <label className=\"search-label w-100\" htmlFor=\"search-input\">\r\n                    <input type=\"text\" value={query}\r\n                        id=\"search-input\"\r\n                        placeholder=\"Search animals by common or scientific names...\"\r\n                        onChange={this.handleInputChange} />\r\n                    <i className=\"fas fa-search search-icon\"></i>\r\n                </label>\r\n\r\n                {/* Error Message */}\r\n                {message && <p className=\"message\"> {message} </p>}\r\n\r\n                {/* loading... */}\r\n                <img src={Loader} className={`search-loading ${loading ? 'show' : 'hide'}`} alt=\"loading\" />\r\n\r\n                {/* Results */}\r\n                {this.renderSearchResults()}\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Search","import Search from './components/Search'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div >\n      <Search />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}